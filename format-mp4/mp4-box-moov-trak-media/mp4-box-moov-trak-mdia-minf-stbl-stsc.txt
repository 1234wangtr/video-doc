---------------------------
Sample To Chunk Box 
---------------------------

8.18.1 Definition 
Box Type:  ‘stsc’ 
Container:  Sample Table Box (‘stbl’) 
Mandatory: Yes 
Quantity: Exactly one

Samples within the media data are grouped into chunks. 
Chunks can be of different sizes, and the samples within a chunk can have different sizes. 
This table can be used to find the chunk that contains a sample, its position, and the associated sample description.

The table is compactly coded. 
Each entry gives the index of the first chunk of a run of(一个运行的) chunks with the same characteristics. 
By subtracting[səbt'ræktɪŋ]扣除 one entry here from the previous one, you can compute how many chunks are in this run. 
You can convert this to a sample count by multiplying by the appropriate[əˈproʊpriət]恰当的 samples-per-chunk.

aligned(8) class SampleToChunkBox  
  extends FullBox(‘stsc’, version = 0, 0) { 
  unsigned int(32) entry_count; 
  for (i=1; i u entry_count; i++) { 
    unsigned int(32) first_chunk; 
    unsigned int(32) samples_per_chunk; 
    unsigned int(32) sample_description_index; 
 } 
}

version is an integer that specifies the version of this box 
entry_count is an integer that gives the number of entries in the following table 

first_chunk is an integer that gives the index of the first chunk in this run of chunks that share the same samples-per-chunk and sample-description-index; 
the index of the first chunk in a track has the value 1 
(the first_chunk field in the first record of this box has the value 1, identifying that the first sample maps to the first chunk).

samples_per_chunk is an integer that gives the number of samples in each of these chunks 

sample_description_index is an integer that gives the index of the sample entry that describes the samples in this chunk. 
The index ranges from 1 to the number of sample entries in the Sample Description Box

-----------------------------------
E:\libav\libavformat\isom.h
-----------------------------------
typedef struct MOVStsc {
    int first;
    int count;
    int id;
} MOVStsc;

-------------------------
mov.c 里面的相关代码
-------------------------
static int mov_read_stsc(MOVContext *c, AVIOContext *pb, MOVAtom atom)
{
    AVStream *st;
    MOVStreamContext *sc;
    unsigned int i, entries;

    if (c->fc->nb_streams < 1)
        return 0;
    st = c->fc->streams[c->fc->nb_streams-1];
    sc = st->priv_data;

    avio_r8(pb); /* version */
    avio_rb24(pb); /* flags */

    entries = avio_rb32(pb);

    av_dlog(c->fc, "track[%i].stsc.entries = %i\n", c->fc->nb_streams-1, entries);

    if (!entries)
        return 0;
    if (entries >= UINT_MAX / sizeof(*sc->stsc_data))
        return AVERROR_INVALIDDATA;
    sc->stsc_data = av_malloc(entries * sizeof(*sc->stsc_data));
    if (!sc->stsc_data)
        return AVERROR(ENOMEM);

    for (i = 0; i < entries && !pb->eof_reached; i++) {
        sc->stsc_data[i].first = avio_rb32(pb);
        sc->stsc_data[i].count = avio_rb32(pb);
        sc->stsc_data[i].id = avio_rb32(pb);
    }

    sc->stsc_count = i;

    if (pb->eof_reached)
        return AVERROR_EOF;

    return 0;
}
