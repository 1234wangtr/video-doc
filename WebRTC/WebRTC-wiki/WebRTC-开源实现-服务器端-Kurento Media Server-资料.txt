http://blog.chinaunix.net/uid-26000296-id-5156285.html

目录
1. Kurento是什么	              3
2. Kurento简介	                      3
2.1 WebRTC媒体服务器	              3
2.2 Kurento 媒体服务器	              4
2.3 Kurento API, 客户端和协议	      5
2.4  使用Kurento创建应用程序	      7
3. Kurento Media Server的安装与卸载    8
3.1  Kurento Media Server的安装	      8
3.2 kurento Media Server的启动与停止   8
3.3. kurento Media Server的卸载	8
4.  STUN和TURN服务配置	9
4.1.  STUN服务器配置	9
4.2.  TURN服务器配置	10
5. Kurento教程	11
5.1  Node.js 教程1 - Hello world	11
5.1.1 运行示例程序	11
5.1.2 运行时的出错	12
5.1.3 示例程序的分析	14
5.1.4 应用程序服务端逻辑	16
5.1.5  客户端逻辑	19
5.1.6 依赖库	20
5.2  教程3一对多的视频呼叫	21
5.2.1 运行示例程序	21
5.2.2  理解这个示例程序	21
5.2.3 应用程序服务端逻辑	24
5.2.4  客户端	29
5.2.5 依赖库	30
5.3 教程四-一对一的视频呼叫	31
5.3.1 运行示例程序	31
5.3.2 Understanding this example	31
5.3.3 应用程序服务端逻辑	33
5.3.4 客户端	40
5.3.5 依赖库	43
11. Kurento 架构	43
11.1 Kurento API和接口	44
11.2 Kurento 模块	45
11.3 使用Kurento创建应用程序	46
11.4 客户端，服务端和Kurento的通信	47
11.5 使用kurento实现实时WebRTC应用	49
11.6 Kurento 设计原则	51

Kurento是什么
Kurento是一个WebRTC媒体服务器，并且包含一个客户端API集合，
用以简化WWW和移动平台上的高级视频应用程序的开发。
Kurento的功能包括组通信，转码，记录，混音，广播和routing of audiovisual flows。
Kurento同样提供高级的媒体处理能力，包括计算机视觉，视频检索，虚拟现实和语音分析。
Kurento模块化的架构使得其集成第三方媒体处理算法(如语音识别，场景分析，人脸识别等)很简单，
而且它可以被应用程序开发者视为透明。
Kurento的核心组成是Kurento媒体服务器，它用来负责媒体传输，处理，加载和记录。
它是基于GStreamer，优化了资源消耗来实现的。它提供的功能如下:
? 网络流协议，包括HTTP(作为客户端和服务端工作)，RTP和WebRTC.
? 组通信(MCU和SFU功能)，支持媒体混合和媒体路由/分发
? 原生支持计算机视觉和虚拟现实滤镜
? 媒体存储，支持WebM和MP4的写操作，能播放GStreamer支持的所有格式
? 自动的媒体转换，支持GStreamer提供的所有codec，包括VP8, H.264, H.263, , AMR, OPUS, Speex, G.711,等。
它还提供的许多基于Java和Javascript的Kurento客户端库，用来提供给应用程序控制Kurento媒体服务器。
如果你喜欢其它的编程语言，可以使用基于WebSocket和JSON-RPC的Kurento协议来实现。
Kurento是开源的，它基于 LGPL version 2.1许可协议，它的源码位于GitHub。.
如果你想快速上手，最好的方式是安装Kurento媒体服务器并学习官方提供的示例教程。
如果想利用好Kurento，可以看本指南的高级部分。