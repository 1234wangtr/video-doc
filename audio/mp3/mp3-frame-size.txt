mp3 frame size

---------------------------------------------------
http://www.mpgedit.org/mpgedit/mpeg_format/MP3Format.html
http://stackoverflow.com/questions/6220660/calculating-the-length-of-mp3-frames-in-milliseconds
---------------------------------------------------
MP3 frame header to get the MP3 version and layer number
    private static readonly int[,] samplesPerFrame = new int[,] {
        {   // MPEG Version 1
            384,    // Layer1
            1152,   // Layer2
            1152    // Layer3
        },
        {   // MPEG Version 2 & 2.5
            384,    // Layer1
            1152,   // Layer2
            576     // Layer3
        }
    };

---------------------------------------------------
http://en.wikipedia.org/wiki/MPEG-1 
关于 MPEG-1 Layer III (MP3) 描述
---------------------------------------------------

MP3 works on 1152 samples like Layer II, but needs to take multiple frames for analysis before frequency-domain (MDCT) processing and quantization can be effective.

---------------------------------------------------
libmp3lame 编码器 设置的三种 frame size
1024, 576, 1152(576 * 2)
---------------------------------------------------

E:\ffmpeg-src\libavcodec\libmp3lame.c lame_get_framesize(s->gfp);

libmp3lame/set_get.c
/* Size of MPEG frame. */
int lame_get_framesize( const lame_global_flags*  gfp )
{
    return gfp->framesize;
}


保存编码器所需要的参数
libmp3lame/lame_global_flags.h

E:\ffmpeg-src\libavcodec\libmp3lame.c mp3lame_encode_init
第一步初始化：分配并部分初始化 s->gfp 结构体
     s->gfp = lame_init()

第二步初始化：
     lame_init_params(s->gfp)
	 这函数里关于framesize的初始化：可以得到三个 frame size: 1024, 576, 576 * 2 = 1152
     if (gfp->ogg) {
         gfp->framesize = 1024;
         gfp->encoder_delay = ENCDELAY;
         gfc->coding = coding_Ogg_Vorbis;
     }
     else {
         gfc->mode_gr = gfp->out_samplerate <= 24000 ? 1 : 2; // Number of granules per frame
         gfp->framesize = 576 * gfc->mode_gr;
         gfp->encoder_delay = ENCDELAY;
         gfc->coding = coding_MPEG_Layer_3;
     }
 
     gfc->frame_size = gfp->framesize;